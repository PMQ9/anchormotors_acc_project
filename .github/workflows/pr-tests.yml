name: Pull Request Tests

on:
  pull_request:
    branches:
      - master
      - main
      - develop
      - ci_cd_with_github_runner_and_grafana  # Testing branch
    paths:
      - '**.m'
      - '**.slx'
      - 'test/**'
      - '.github/workflows/pr-tests.yml'

  # Allow manual trigger
  workflow_dispatch:

jobs:
  test-single-vehicle:
    name: Single Vehicle Tests
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2025a

      - name: Run Single Vehicle Tests
        uses: matlab-actions/run-command@v2
        with:
          command: |
            cd('test/single_veh_test');
            run_all_single_test;

      - name: Upload Single Vehicle Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-${{ github.event.pull_request.number }}-single-vehicle-results
          path: test/single_veh_test/results/
          retention-days: 14

      - name: Comment PR with results
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const resultPath = 'test/single_veh_test/results';
            let comment = '## Single Vehicle Test Results\n\n';

            if ('${{ job.status }}' === 'success') {
              comment += ':white_check_mark: Tests passed successfully!\n\n';
            } else {
              comment += ':x: Tests failed!\n\n';
            }

            comment += 'Download the full test report from the workflow artifacts.\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  test-multi-vehicle:
    name: Multi Vehicle Tests
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2025a

      - name: Run Multi Vehicle Tests
        uses: matlab-actions/run-command@v2
        with:
          command: |
            cd('test/multi_veh_test');
            run_all_multi_test;

      - name: Upload Multi Vehicle Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pr-${{ github.event.pull_request.number }}-multi-vehicle-results
          path: test/multi_veh_test/results/
          retention-days: 14

      - name: Comment PR with results
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const resultPath = 'test/multi_veh_test/results';
            let comment = '## Multi Vehicle Test Results\n\n';

            if ('${{ job.status }}' === 'success') {
              comment += ':white_check_mark: Tests passed successfully!\n\n';
            } else {
              comment += ':x: Tests failed!\n\n';
            }

            comment += 'Download the full test report from the workflow artifacts.\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  pr-summary:
    name: PR Test Summary
    needs: [test-single-vehicle, test-multi-vehicle]
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'pull_request'

    steps:
      - name: Post overall summary
        uses: actions/github-script@v7
        with:
          script: |
            const singleVehicle = '${{ needs.test-single-vehicle.result }}';
            const multiVehicle = '${{ needs.test-multi-vehicle.result }}';

            let summary = '## Test Suite Summary\n\n';
            summary += '| Test Suite | Status |\n';
            summary += '|------------|--------|\n';
            summary += `| Single Vehicle | ${singleVehicle === 'success' ? ':white_check_mark: Passed' : ':x: Failed'} |\n`;
            summary += `| Multi Vehicle | ${multiVehicle === 'success' ? ':white_check_mark: Passed' : ':x: Failed'} |\n\n`;

            if (singleVehicle === 'success' && multiVehicle === 'success') {
              summary += ':tada: All tests passed! This PR is ready for review.\n';
            } else {
              summary += ':warning: Some tests failed. Please review the test reports in the workflow artifacts.\n';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: Set PR status
        run: |
          if [ "${{ needs.test-single-vehicle.result }}" == "success" ] && [ "${{ needs.test-multi-vehicle.result }}" == "success" ]; then
            echo "All tests passed!"
            exit 0
          else
            echo "Some tests failed!"
            exit 1
          fi
